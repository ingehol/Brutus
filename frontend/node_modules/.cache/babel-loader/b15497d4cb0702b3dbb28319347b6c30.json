{"ast":null,"code":"export const userService = {\n  fetchData,\n  postData,\n  deleteData\n};\n\nasync function fetchData(link) {\n  const host = 'http://localhost:8080/api' + link;\n  console.log(\"string: \" + host);\n  const res = await fetch(host, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  if (res.status >= 200 && res.status <= 299) {\n    return await res.json();\n  } else {\n    return null;\n  }\n  /*\n  .then((response) => {\n      console.log(\"this is stat\" + response.status);\n      if(response.status >= 200 && response.status <= 299){\n          return response.json();\n      }\n      else{\n          \n        throw Error(response.statusText);\n      }\n  });\n  return await(res);*/\n  //const data = await response.json();\n  //return data;\n\n}\n\nasync function postData(link, data) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data),\n    credentials: 'include'\n  };\n  const res = fetch(link, requestOptions);\n  return (await res).status;\n}\n\nasync function deleteData(link, seq) {\n  const host = 'localhost:8080/api';\n  const requestOptions = {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  console.log(seq);\n  console.log(host + link + \"/\" + seq);\n  fetch(host + link + \"/\" + seq, requestOptions);\n}","map":{"version":3,"sources":["/Users/ingebrigt/Desktop/Prosjekter/brutus/frontend/src/dataHelper.js"],"names":["userService","fetchData","postData","deleteData","link","host","console","log","res","fetch","method","headers","status","json","data","requestOptions","body","JSON","stringify","credentials","seq"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG;AACvBC,EAAAA,SADuB;AAEvBC,EAAAA,QAFuB;AAGvBC,EAAAA;AAHuB,CAApB;;AAQP,eAAeF,SAAf,CAAyBG,IAAzB,EAA+B;AAC3B,QAAMC,IAAI,GAAG,8BAA4BD,IAAzC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,IAAzB;AACC,QAAMG,GAAG,GAAG,MAAMC,KAAK,CAACJ,IAAD,EAAO;AAC3BK,IAAAA,MAAM,EAAE,KADmB;AAE3BC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAFkB,GAAP,CAAvB;;AAID,MAAGH,GAAG,CAACI,MAAJ,IAAc,GAAd,IAAqBJ,GAAG,CAACI,MAAJ,IAAc,GAAtC,EAA0C;AACtC,WAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AACH,GAFD,MAGI;AACA,WAAO,IAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;AACA;;AACH;;AAED,eAAeX,QAAf,CAAwBE,IAAxB,EAA8BU,IAA9B,EAAmC;AAC/B,QAAMC,cAAc,GAAG;AACnBL,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBK,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAHa;AAInBK,IAAAA,WAAW,EAAE;AAJM,GAAvB;AAMD,QAAMX,GAAG,GAAGC,KAAK,CAACL,IAAD,EAAOW,cAAP,CAAjB;AAEA,SAAO,CAAC,MAAMP,GAAP,EAAYI,MAAnB;AACF;;AAED,eAAeT,UAAf,CAA0BC,IAA1B,EAAgCgB,GAAhC,EAAqC;AACjC,QAAMf,IAAI,GAAG,oBAAb;AACA,QAAMU,cAAc,GAAG;AACnBL,IAAAA,MAAM,EAAE,QADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAFU,GAAvB;AAIAL,EAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACAd,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,GAACD,IAAL,GAAU,GAAV,GAAcgB,GAA1B;AACAX,EAAAA,KAAK,CAACJ,IAAI,GAACD,IAAL,GAAU,GAAV,GAAcgB,GAAf,EAAoBL,cAApB,CAAL;AACH","sourcesContent":["export const userService = {\n    fetchData,\n    postData,\n    deleteData\n};\n\n\n\nasync function fetchData(link) {\n    const host = 'http://localhost:8080/api'+link;\n    console.log(\"string: \" + host);\n     const res = await fetch(host, {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n    });\n    if(res.status >= 200 && res.status <= 299){\n        return await res.json();\n    }\n    else{\n        return null;\n    }\n\n    /*\n    .then((response) => {\n        console.log(\"this is stat\" + response.status);\n        if(response.status >= 200 && response.status <= 299){\n            return response.json();\n        }\n        else{\n            \n          throw Error(response.statusText);\n        }\n    });\n    return await(res);*/\n\n    //const data = await response.json();\n    //return data;\n}\n\nasync function postData(link, data){\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n        credentials: 'include'\n    };\n   const res = fetch(link, requestOptions);\n\n   return (await res).status;      \n}\n\nasync function deleteData(link, seq) {\n    const host = 'localhost:8080/api';\n    const requestOptions = {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json' },\n    };\n    console.log(seq)\n    console.log(host+link+\"/\"+seq)\n    fetch(host+link+\"/\"+seq, requestOptions);\n}"]},"metadata":{},"sourceType":"module"}